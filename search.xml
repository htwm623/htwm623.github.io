<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何批量导入阿里icon</title>
    <url>/2020/10/13/yuque/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E9%98%BF%E9%87%8Cicon/</url>
    <content><![CDATA[<p><a name="ea9f3735"></a></p><h1 id="如何批量导出阿里icon"><a href="#如何批量导出阿里icon" class="headerlink" title="如何批量导出阿里icon"></a>如何批量导出阿里icon</h1><p><br>原文章来源  <a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">https://www.jianshu.com/p/59dd28f0b9c9</a><br><br>阿里icon 素材网站  <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a><br></p><p><a name="ae28ce60"></a></p><h2 id="下载图标"><a href="#下载图标" class="headerlink" title="下载图标"></a>下载图标</h2><ul>
<li>如何批量将素材导入购物车 比如在以下页面</li>
</ul><p><br><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_220857.png#align=left&display=inline&height=748&margin=%5Bobject%20Object%5D&originHeight=748&originWidth=1280&status=done&style=none&width=1280" alt><br>在该页面下调出控制台   在控制台执行如下代码 (亲测:2019年10月28日)<br></p><a id="more"></a>




<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> icons = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.icon-gouwuche1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> auto_click = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123; <span class="keyword">if</span> (i &lt; icons.length) &#123; setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; icons.item(i).click(); auto_click(i + <span class="number">1</span>); &#125;, <span class="number">600</span>); &#125; &#125;;</span><br><span class="line"></span><br><span class="line">auto_click(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p><br>则会自动添加代码至购物车 -&gt; 添加至项目 -&gt; 选择 fontclass 然后下载至本地<br></p>
<p><a name="f12d3480"></a></p>
<h2 id="调用图标"><a href="#调用图标" class="headerlink" title="调用图标"></a>调用图标</h2><ol>
<li>将下载的文件全部放入项目的assert 文件下</li>
<li>在main.js 中将 iconfont.css 文件引入(个人使用,略过 原文章中修改iconfont.css )</li>
<li>查看incofont.css 文件中 font-family的值,如:</li>
</ol>
<p><br><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_233757.png#align=left&display=inline&height=160&margin=%5Bobject%20Object%5D&originHeight=160&originWidth=790&status=done&style=none&width=790" alt><br><br>红框即为 fontfamily<br></p>
<ol start="4">
<li>调用```html<br><i class="iconfont icon-bad-fill"></i><pre><code>&lt;br /&gt;class空格前部分为 fontfamliy的值 后面一部分可在阿里icon项目页面进行复制&lt;br /&gt;以上
</code></pre></li>
</ol>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
  </entry>
  <entry>
    <title>收藏的文章及网站</title>
    <url>/2020/10/13/yuque/%E6%94%B6%E8%97%8F%E7%9A%84%E6%96%87%E7%AB%A0%E5%8F%8A%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><a name="b566d36f"></a></p><h1 id="收藏的文章及网站"><a href="#收藏的文章及网站" class="headerlink" title="收藏的文章及网站"></a>收藏的文章及网站</h1><p><a name="fb4ec8b1"></a></p><h2 id="收藏的网站"><a href="#收藏的网站" class="headerlink" title="收藏的网站"></a>收藏的网站</h2><ol>
<li><a href="https://www.hackerrank.com/dashboard" target="_blank" rel="noopener">hackerrank</a>  学习和提高编码能力的网站</li>
<li><a href="https://codesandbox.io/" target="_blank" rel="noopener">codesandbox</a>  在线代码编辑器,可以快速编辑vue react 等一些示例代码,也支持下载 ( <a href="https://codesandbox.io/s/vue-template-4hxce" target="_blank" rel="noopener">https://codesandbox.io/s/vue-template-4hxce</a> )</li>
</ol><p><a name="ead250fe"></a></p><h2 id="前端收藏库或文章"><a href="#前端收藏库或文章" class="headerlink" title="前端收藏库或文章"></a>前端收藏库或文章</h2><ol>
<li><a href="https://github.com/le5le-com/topology" target="_blank" rel="noopener">https://github.com/le5le-com/topology</a>     功能丰富的绘图工具（微服务架构图、拓扑图、流程图、类图等ULM图、脑图，动画、视频支持）</li>
<li><a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">vue使用第三方icon</a></li>
<li><a href="https://www.jianshu.com/p/7bcf4ad609cf" target="_blank" rel="noopener">markdown中使用特殊的符号</a></li>
</ol><a id="more"></a>




<p><a name="f381d635"></a></p>
<h2 id="后台收藏库或文章"><a href="#后台收藏库或文章" class="headerlink" title="后台收藏库或文章"></a>后台收藏库或文章</h2><ol>
<li><a href="https://github.com/OlafenwaMoses/ImageAI" target="_blank" rel="noopener">python可以直接使用的AI识别模型</a></li>
<li></li>
</ol>
<p><a name="69507d65"></a></p>
<h2 id="收藏的库"><a href="#收藏的库" class="headerlink" title="收藏的库"></a>收藏的库</h2><ol>
<li><a href="https://github.com/hitherejoe/animate" target="_blank" rel="noopener">animate css3动画效果</a></li>
<li><a href="https://www.swiper.com.cn/" target="_blank" rel="noopener">swipe 移动端网站触摸滑动效果</a></li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title>云服务器samba设置</title>
    <url>/2020/10/13/yuque/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8samba%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>由于安全问题,云服务器运营商会默认限制部分端口的访问,如samba使用的445端口,则导致默认设置的samba无法访问,自己解决方案如下<br></p><ol>
<li><p>linux samba 修改监听端口```bash</p>
<h1 id="直接在samba-配置文件中添加以下语句"><a href="#直接在samba-配置文件中添加以下语句" class="headerlink" title="直接在samba 配置文件中添加以下语句"></a>直接在samba 配置文件中添加以下语句</h1><p>smb ports = 4455</p>
<h1 id="重启smb服务-则samba监听端口修改为4455"><a href="#重启smb服务-则samba监听端口修改为4455" class="headerlink" title="重启smb服务 则samba监听端口修改为4455"></a>重启smb服务 则samba监听端口修改为4455</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2. windows设置端口转发&lt;br /&gt;原文来自于 [https://www.zhihu.com/question/59814912](https://www.zhihu.com/question/59814912)```bash</span><br><span class="line"># 1. 添加端口转发,添加端口转发之后 实际上访问 \\127.0.0.1 就是在访问设置ip的samba</span><br><span class="line">netsh interface portproxy add v4tov4 listenport=445 listenaddress=127.0.0.1 connectport=4455 connectaddress=xx.xx.xx.xxx</span><br><span class="line"></span><br><span class="line"># 2. 其他命令</span><br><span class="line"># 查看全部端口转发</span><br><span class="line">netsh interface portproxy show all</span><br><span class="line"># 删除端口转发</span><br><span class="line">netsh interface portproxy delete v4tov4 listenport=445 listenaddress=127.0.0.1</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过资源管理器访问 \127.0.0.1 实际上就是在访问监听端口的samba</p>
</li>
</ol><a id="more"></a>

<p><br>ps: 亲测有效(2019/12/22)</p>
]]></content>
      <categories>
        <category>运维管理</category>
      </categories>
      <tags>
        <tag>samba</tag>
      </tags>
  </entry>
  <entry>
    <title>如何处理json文件结尾的逗号</title>
    <url>/2020/10/13/yuque/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86json%E6%96%87%E4%BB%B6%E7%BB%93%E5%B0%BE%E7%9A%84%E9%80%97%E5%8F%B7/</url>
    <content><![CDATA[<p><a name="f6d01664"></a></p><h1 id="python如何处理json文件结尾多余的逗号"><a href="#python如何处理json文件结尾多余的逗号" class="headerlink" title="python如何处理json文件结尾多余的逗号"></a>python如何处理json文件结尾多余的逗号</h1><p><br>问题描述, json文件结尾是不允许使用逗号的<br><br>正确格式如下:<br></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br>但如果使用json作为配置文件时,人为输入可能如下<br></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>






<p><br>在使用上述格式的文件时, json.loads文件会报错<br>参考来源 <a href="https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas" target="_blank" rel="noopener">https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas</a><br></p>
<p><a name="2eed9a76"></a></p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p><br>使用 jsoncomment 包进行解析<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(filename) <span class="keyword">as</span> data_file:    </span><br><span class="line">    parser = JsonComment(json)</span><br><span class="line">    data = parser.load(data_file)</span><br></pre></td></tr></table></figure>

<p><br>缺陷 会从字符串中删除逗号 例如<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line">string = <span class="string">'&#123;"key1": "&#123;my special value,&#125;"&#125;'</span></span><br><span class="line">parser = JsonComment()</span><br><span class="line">json_boj = parser.loads(string)</span><br><span class="line">print(json_boj)</span><br><span class="line"><span class="comment"># &#123;'key1': '&#123;my special value&#125;'&#125;</span></span><br><span class="line"><span class="comment"># 原本值中的字符串逗号也被删除了</span></span><br></pre></td></tr></table></figure>

<p><br>局限: 原本值中的字符串逗号也被删除了<br></p>
<p><a name="f3deb6e7"></a></p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p><br>先通过python 将字符串进行eval,同时 替换null, true false例如<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ast, json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clean_json</span><span class="params">(str)</span>:</span></span><br><span class="line">  str = str.replace(<span class="string">'null'</span>, <span class="string">'None'</span>).replace(<span class="string">'true'</span>, <span class="string">'True'</span>).replace(<span class="string">'false'</span>, <span class="string">'False'</span>)</span><br><span class="line">  <span class="keyword">return</span> json.dumps(ast.literal_eval(str))</span><br></pre></td></tr></table></figure>

<p><br>局限:<br></p>
<ol>
<li>会破坏原本字符串中包含 null, true, false</li>
<li>即算使用 ast.literal_eval 也需要考虑一些安全性的问题</li>
</ol>
<p><a name="54bbba80"></a></p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul>
<li>json最好写对 <img src="https://gw.alipayobjects.com/os/lib/twemoji/11.2.0/2/svg/1f602.svg#align=left&display=inline&height=18&margin=%5Bobject%20Object%5D&originHeight=150&originWidth=150&status=done&style=none&width=18" alt>, 如果作为需要手动添加内容的配置文件,最好还是改格式把</li>
</ul>
]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml文件格式及python解析</title>
    <url>/2020/10/13/yuque/yaml%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8F%8Apython%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p><a name="1ea0574a"></a></p><h1 id="yaml文件格式及python解析"><a href="#yaml文件格式及python解析" class="headerlink" title="yaml文件格式及python解析"></a>yaml文件格式及python解析</h1><p><a name="883b9673"></a></p><h2 id="用途及基本规则"><a href="#用途及基本规则" class="headerlink" title="用途及基本规则"></a>用途及基本规则</h2><ul>
<li>常用于配置文件</li>
<li>大小写敏感</li>
<li>使用缩进表示嵌套</li>
<li>使用空格表示缩进,不允许使用   键作为缩进</li>
<li>缩进的空格数目没有实际意义,左侧对其即为同级<br><a name="9b6ac63f"></a><h2 id="Python解析"><a href="#Python解析" class="headerlink" title="Python解析"></a>Python解析</h2></li>
</ul><ul>
<li>涉及到的包 pip install PyYAML</li>
<li>示例代码</li>
</ul><p><br>yaml文件<br></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.yaml</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">37</span></span><br><span class="line"><span class="attr">spouse:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Jane</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">25</span></span><br><span class="line"><span class="attr">children:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Jimmy</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">  - name1:</span> <span class="string">Jenny</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age1:</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><a id="more"></a>






<p><br>python 解析示例<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'test.yaml'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)<span class="keyword">as</span> fr:</span><br><span class="line">        data = yaml.load(fr, Loader=yaml.Loader)</span><br><span class="line">    print(data)</span><br><span class="line"><span class="comment"># &#123;'age': 37, 'spouse': &#123;'name': 'Jane Smith', 'age': 25&#125;, 'children': [&#123;'name': 'Jimmy Smith', 'age': 15&#125;, &#123;'name1': 'Jenny Smith', 'age1': 12&#125;]&#125;</span></span><br></pre></td></tr></table></figure>


<p><a name="c5350820"></a></p>
<h2 id="yaml语法"><a href="#yaml语法" class="headerlink" title="yaml语法"></a>yaml语法</h2><ul>
<li>参考 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML语言教程 阮一峰</a></li>
</ul>
]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>yaml</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 模板</title>
    <url>/2020/10/13/yuque/hexo%20%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<p><a name="DbQGp"></a></p>
<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>模板</tag>
      </tags>
  </entry>
  <entry>
    <title>导出语雀文档</title>
    <url>/2020/09/25/yuque/%E5%AF%BC%E5%87%BA%E8%AF%AD%E9%9B%80%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>参考链接<br /><a href="https://github.com/x-cold/yuque-hexo" target="_blank" rel="noopener">https://github.com/x-cold/yuque-hexo</a><br /></p>
<ol>
<li><p>下载yuque-hexo工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -g yuque-hexo</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置package.json 示例如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="string">"yuqueConfig"</span>: &#123;</span><br><span class="line">    <span class="string">"postPath"</span>: <span class="string">"yuque"</span>,  <span class="comment"># 下载下来的文件目标路径</span></span><br><span class="line">    <span class="string">"cachePath"</span>: <span class="string">"yuque.json"</span>, <span class="comment"># 下载过程中缓存文件</span></span><br><span class="line">    <span class="string">"mdNameFormat"</span>: <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"adapter"</span>: <span class="string">"hexo"</span>,</span><br><span class="line">    <span class="string">"concurrency"</span>: 5,</span><br><span class="line">    <span class="string">"baseUrl"</span>: <span class="string">"https://www.yuque.com/api/v2"</span>,  <span class="comment">#</span></span><br><span class="line">    <span class="string">"login"</span>: <span class="string">"paradox-6sj6t"</span>,  <span class="comment"># 登录名称</span></span><br><span class="line">    <span class="string">"repo"</span>: <span class="string">"htwm623"</span>,  <span class="comment"># 语雀仓库短名称</span></span><br><span class="line">    <span class="string">"onlyPublished"</span>: <span class="literal">true</span>, <span class="comment"># 只展示已经发布的文章</span></span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"xxxxxxxxxxxxxxxx"</span>  <span class="comment"># token</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yuque-hexo sync</span><br></pre></td></tr></table></figure>
<p>即可将文件库下载至本地<br /></p>
</li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>语雀</tag>
      </tags>
  </entry>
  <entry>
    <title>直接部署文件夹至gh-pages</title>
    <url>/2020/09/24/yuque/%E7%9B%B4%E6%8E%A5%E9%83%A8%E7%BD%B2%E6%96%87%E4%BB%B6%E5%A4%B9%E8%87%B3gh-pages/</url>
    <content><![CDATA[<p><a href="https://www.npmjs.com/package/gh-pages" target="_blank" rel="noopener">https://www.npmjs.com/package/gh-pages</a><br /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install gh-pages@3.0.0 --save-dev</span><br></pre></td></tr></table></figure>

<p><br />3.1版本会有bug, 所以指定版本安装<br /><br>部署只当文件夹<br /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gh-pages -d [dist]</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>Maridb安装及远程连接</title>
    <url>/2020/07/14/yuque/Maridb%E5%AE%89%E8%A3%85%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<hr><p>tags: [Maridb, 数据库]<br>categories: [其他]</p><hr><p><a name="FAsmK"></a></p><h3 id="1-安装数据库"><a href="#1-安装数据库" class="headerlink" title="1. 安装数据库"></a>1. 安装数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure><p><a name="5hPUr"></a></p><h3 id="2-配置数据库"><a href="#2-配置数据库" class="headerlink" title="2. 配置数据库"></a>2. 配置数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure><p>按照需求选择设置即可<br></p><p><a name="Y5pmA"></a></p><h3 id="3-配置远程连接"><a href="#3-配置远程连接" class="headerlink" title="3. 配置远程连接"></a>3. 配置远程连接</h3><p><a href="https://blog.csdn.net/lanuage/article/details/78846766" target="_blank" rel="noopener">参考文章</a></p><a id="more"></a>











<ol>
<li><p>在文件 /etc/mysql/mariadb.conf.d/50-server.cnf，注释掉bind-address</p>
</li>
<li><p>进入数据库中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置账户和远程连接的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'password'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'192.168.100.%'</span> IDENTIFIED BY <span class="string">'my-new-password'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>
<p>设置指定ip时只能由该ip连接<br></p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Python 收藏文章</title>
    <url>/2020/03/23/yuque/Python%20%E6%94%B6%E8%97%8F%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<hr>
<p>tags: [python, 收藏]<br>categories: [其他]</p>
<hr>
<p><a name="upFGe"></a></p>
<h2 id="django文章收藏"><a href="#django文章收藏" class="headerlink" title="django文章收藏"></a>django文章收藏</h2><ul>
<li><a href="https://blog.csdn.net/Dopamy_BusyMonkey/article/details/70620676" target="_blank" rel="noopener">djanjo登陆和session过期跳转</a></li>
<li><br />




</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>个人习惯设置及软件快捷键</title>
    <url>/2020/03/14/yuque/%E4%B8%AA%E4%BA%BA%E4%B9%A0%E6%83%AF%E8%AE%BE%E7%BD%AE%E5%8F%8A%E8%BD%AF%E4%BB%B6%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<hr><p>tags: [个人习惯]<br>categories: [其他]</p><hr><p><a name="f13a19ca"></a></p><h2 id="将Python脚本编译成二进制文件"><a href="#将Python脚本编译成二进制文件" class="headerlink" title="将Python脚本编译成二进制文件"></a>将Python脚本编译成二进制文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bash</span></span><br><span class="line">$ python -m compile &lt;file&gt;</span><br><span class="line"><span class="comment"># 会在当前文件夹中生成__pycache__ 文件夹中生成对应的pyc文件</span></span><br><span class="line"><span class="comment"># 调用方式和原始文件一致,但只能使用同版本的python解释器执行</span></span><br></pre></td></tr></table></figure><a id="more"></a>






<p><a name="7c18b8d8"></a></p>
<h2 id="Pycharm-文件头配置"><a href="#Pycharm-文件头配置" class="headerlink" title="Pycharm 文件头配置"></a>Pycharm 文件头配置</h2><p><br>File  ⇒  Settings ⇒ Editor  ⇒ File and Code Templates<br><br>其中python个人设置<br></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env python</span></span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line"># file: $&#123;NAME&#125;.py</span><br><span class="line"># time: $&#123;DATE&#125; $&#123;TIME&#125;</span><br><span class="line"># desc:</span><br></pre></td></tr></table></figure>


<p><a name="a3b3bac0"></a></p>
<h2 id="Vscode-配置背景图片"><a href="#Vscode-配置背景图片" class="headerlink" title="Vscode 配置背景图片"></a>Vscode 配置背景图片</h2><ol>
<li><p>安装 vscode extension: background</p>
</li>
<li><p>修改配置文件如下</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"background.useDefault": false,</span><br><span class="line">    "background.enabled": true,</span><br><span class="line">    "background.customImages": [</span><br><span class="line">        <span class="string">"file:///C:/Users/haibo/Desktop/%E5%A3%81%E7%BA%B8/timg.jpeg"</span></span><br><span class="line">    ],</span><br><span class="line">    "background.style": &#123;</span><br><span class="line">        "content": "''",</span><br><span class="line">        "pointer-events": "none",</span><br><span class="line">        "position": "absolute",</span><br><span class="line">        "z-index": "99999",</span><br><span class="line">        "width": "100%",</span><br><span class="line">        "height": "100%",</span><br><span class="line">        "background-position": "center",</span><br><span class="line">        "background-repeat": "no-repeat",</span><br><span class="line">        "background-size": "100%,100%",</span><br><span class="line">        "opacity": 0.3</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中 background.customImages 即为背景图片列表,最多可设置三张</p>
</li>
</ol>
<br>


]]></content>
  </entry>
  <entry>
    <title>pandas读写csv及追加</title>
    <url>/2020/03/12/yuque/pandas%E8%AF%BB%E5%86%99csv%E5%8F%8A%E8%BF%BD%E5%8A%A0/</url>
    <content><![CDATA[<hr><p>tags: [pandas, csv]<br>categories: [后端开发]</p><hr><p><a name="jBSla"></a></p><h2 id="pandas写入csv"><a href="#pandas写入csv" class="headerlink" title="pandas写入csv"></a>pandas写入csv</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = pd.DataFrame(columns=[<span class="string">'key1'</span>, <span class="string">'key2'</span>, <span class="string">'key3'</span>, <span class="string">'key4'</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    result = result.append(&#123;<span class="string">'key1'</span>: <span class="number">1</span>, <span class="string">'key2'</span>: <span class="number">2</span>, <span class="string">'key3'</span>: <span class="number">3</span>, <span class="string">'key4'</span>: <span class="number">4</span>&#125;,ignore_index=<span class="literal">True</span>)</span><br><span class="line">result.to_csv(<span class="string">'test.csv'</span>, sep=<span class="string">','</span>, index=<span class="literal">False</span>,mode=<span class="string">'w'</span>)</span><br></pre></td></tr></table></figure><a id="more"></a>





<br>

<ul>
<li>追加写入</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result.to_csv(<span class="string">'test.csv'</span>, sep=<span class="string">','</span>, index=<span class="literal">False</span>,mode=<span class="string">'a'</span>)</span><br></pre></td></tr></table></figure>


<ul>
<li><p>追加写入 时表头 也会追加<br><a name="6OXQv"></a></p>
<h2 id="pandas读取csv"><a href="#pandas读取csv" class="headerlink" title="pandas读取csv"></a>pandas读取csv</h2></li>
<li><p>遇到了再说</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Python将无限分类结构数据转为json</title>
    <url>/2020/03/08/yuque/Python%E5%B0%86%E6%97%A0%E9%99%90%E5%88%86%E7%B1%BB%E7%BB%93%E6%9E%84%E6%95%B0%E6%8D%AE%E8%BD%AC%E4%B8%BAjson/</url>
    <content><![CDATA[<hr><p>tags: [python, json]<br>categories: [后端开发]</p><hr><br><ul>
<li><a href="https://segmentfault.com/q/1010000008541784" target="_blank" rel="noopener">原文链接</a></li>
</ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source=[</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"my document"</span>,<span class="string">"id"</span>:<span class="number">1</span> , <span class="string">"parentid"</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"photos"</span>,<span class="string">"id"</span>:<span class="number">2</span> , <span class="string">"parentid"</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Friend"</span>,<span class="string">"id"</span>:<span class="number">3</span> , <span class="string">"parentid"</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Wife"</span>,<span class="string">"id"</span>:<span class="number">4</span> , <span class="string">"parentid"</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Company"</span>,<span class="string">"id"</span>:<span class="number">5</span> , <span class="string">"parentid"</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Program Files"</span>,<span class="string">"id"</span>:<span class="number">6</span> , <span class="string">"parentid"</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"intel"</span>,<span class="string">"id"</span>:<span class="number">7</span> , <span class="string">"parentid"</span>: <span class="number">6</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"java"</span>,<span class="string">"id"</span>:<span class="number">8</span> , <span class="string">"parentid"</span>: <span class="number">6</span> &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a>








<ol>
<li><p>递归</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getChildren</span><span class="params">(id=<span class="number">0</span>)</span>:</span></span><br><span class="line">    res =[]</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> source:</span><br><span class="line">        <span class="keyword">if</span> obj[<span class="string">"parentid"</span>] ==id:</span><br><span class="line">            res.append(&#123;<span class="string">"id"</span>:obj[<span class="string">"id"</span>],<span class="string">"text"</span>:obj[<span class="string">"name"</span>],<span class="string">"children"</span>:getChildren(obj[<span class="string">"id"</span>])&#125;)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
</li>
<li><p>哈希表</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tree_dict = &#123;&#125;</span><br><span class="line">tree_data = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> source:</span><br><span class="line">    tree_dict[item[<span class="string">"id"</span>]] = item</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tree_dict:</span><br><span class="line">    <span class="keyword">if</span> tree_dict[i][<span class="string">"parentid"</span>]:</span><br><span class="line">        parentid = tree_dict[i][<span class="string">"parentid"</span>]</span><br><span class="line">        parent = tree_dict[parentid]</span><br><span class="line">        parent.setdefault(<span class="string">"children"</span>, []).append(tree_dict[i])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tree_data.append(tree_dict[i])</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>使用Jupyter Notebook 安装其他内核</title>
    <url>/2020/02/02/yuque/%E4%BD%BF%E7%94%A8Jupyter%20Notebook%20%E5%AE%89%E8%A3%85%E5%85%B6%E4%BB%96%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<p><a name="GiCcn"></a></p><h2 id="javascript-内核安装"><a href="#javascript-内核安装" class="headerlink" title="javascript 内核安装"></a>javascript 内核安装</h2><p>参考<a href="https://github.com/n-riesco/ijavascript" target="_blank" rel="noopener">ijavascript</a><br></p><ol>
<li><p>windows </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br><span class="line">pip3 install jupyter</span><br><span class="line">npm install -g ijavascript</span><br><span class="line">ijsinstall</span><br></pre></td></tr></table></figure>
</li>
<li><p>正常运行 jupyter notebook 选择node 的内核即可</p>
</li>
</ol><a id="more"></a>


<br>
<br>


]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>Jetbrains软件破解</title>
    <url>/2020/02/01/yuque/Jetbrains%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<ol>
<li>下载jetbrains破解jar包  jetbrainsCrack.jar</li>
<li>修改jetbrains安装目录下 bin下 *.exe.vmoptions文件 在文件末尾追加如下所示 后面位jetbrainsCrack.jar绝对目录</li>
</ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-javaagent:D:\ProgramEnv\jetbrainsfree\jetbrainsCrack.jar</span><br></pre></td></tr></table></figure><a id="more"></a>


<p><br>新安装的软件会现实激活码格式不对, 附录当前可用文件全文件内容<br></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Xms128m</span><br><span class="line">-Xmx750m</span><br><span class="line">-XX:ReservedCodeCacheSize=240m</span><br><span class="line">-XX:+UseConcMarkSweepGC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB=50</span><br><span class="line">-ea</span><br><span class="line">-Dsun.io.useCanonCaches=false</span><br><span class="line">-Djava.net.preferIPv4Stack=true</span><br><span class="line">-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;</span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br><span class="line">-javaagent:D:\ProgramEnv\jetbrainsfree\jetbrainsCrack.jar</span><br></pre></td></tr></table></figure>


<ol start="3">
<li>启动软件在Activation code中输入如下 激活码</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A82DEE284F-eyJsaWNlbnNlSWQiOiJBODJERUUyODRGIiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJVbmxpbWl0ZWQgbGljZW5zZSB0aWxsIGVuZCBvZiB0aGUgY2VudHVyeS4iLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiODkwNzA3MC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-5epo90Xs7KIIBb8ckoxnB/AZQ8Ev7rFrNqwFhBAsQYsQyhvqf1FcYdmlecFWJBHSWZU9b41kvsN4bwAHT5PiznOTmfvGv1MuOzMO0VOXZlc+edepemgpt+t3GUHvfGtzWFYeKeyCk+CLA9BqUzHRTgl2uBoIMNqh5izlDmejIwUHLl39QOyzHiTYNehnVN7GW5+QUeimTr/koVUgK8xofu59Tv8rcdiwIXwTo71LcU2z2P+T3R81fwKkt34evy7kRch4NIQUQUno//Pl3V0rInm3B2oFq9YBygPUdBUbdH/KHROyohZRD8SaZJO6kUT0BNvtDPKF4mCT1saWM38jkw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG/PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg/nYV31HLF7fJUAplI/1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4/G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd/GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt/wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59/THOT7NJQhr6AyLkhhJCdkzE2cob/KouVp4ivV7Q3Fc6HX7eepHAAF/DpxwgOrg9smX6coXLgfp0b1RU2u/tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB/40BjpMUrDRCeKuiBahC0DCoU/4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV/g==</span><br></pre></td></tr></table></figure>

<p><br>即可激活<br></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Jetbrains</tag>
      </tags>
  </entry>
  <entry>
    <title>GraphQl学习</title>
    <url>/2020/01/19/yuque/GraphQl%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><a name="cd02615d"></a></p><h2 id="Graph介绍"><a href="#Graph介绍" class="headerlink" title="Graph介绍"></a>Graph介绍</h2><ul>
<li>特点<ul>
<li>请求需要的数据 不多不少</li>
<li>获取多个资源，只用一个请求</li>
<li>描述所有可能类型的系统,便于维护,根据需求平滑眼镜演进,添加或隐藏字段</li>
</ul>
</li>
<li>node监听运行修改文件命令 nodemon执行命令</li>
<li>GraphHelloWolrd```javascript<br>const express = require(‘express’)<br>const {buildSchema} = require(‘graphql’)<br>const graphqlHTTP = require(‘express-graphql’)</li>
</ul><a id="more"></a>

<p>const schema = buildSchema(<code>type Account{
    name: String
    age: Int
    sex: String
    department: String
  }
  type Query {
    hello: String
    accountName: String
    age: Int
    account: Account
  }</code>)</p>
<p>const root = {<br>  hello: () =&gt; {<br>    return ‘hello world’<br>  },<br>  accountName: () =&gt; {<br>    return ‘xiaoming’<br>  },<br>  age: () =&gt; {<br>    return 18<br>  },<br>  account: () =&gt; {<br>    return {<br>      name: ‘nizi’,<br>      age: ‘18’,<br>      sex: ‘femail’,<br>      department: ‘school’<br>    }<br>  }<br>}</p>
<p>const app = express()</p>
<p>app.use(‘/graphql’, graphqlHTTP({<br>  schema: schema,<br>  rootValue: root,<br>  graphiql: true<br>}))</p>
<p>app.listen(3000)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a name=&quot;9WsJ8&quot;&gt;&lt;/a&gt;</span><br><span class="line">## 基本数据类型</span><br><span class="line"></span><br><span class="line">- 基本类型 String,Int,Float,Boolean和ID</span><br><span class="line">&lt;a name=&quot;DCuaR&quot;&gt;&lt;/a&gt;</span><br><span class="line">## 参数传递 </span><br><span class="line">query&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">```javascript</span><br><span class="line">query&#123;</span><br><span class="line">	getClassMates(classNo: 31)</span><br><span class="line">  account(username:&quot;xiaoming&quot;) &#123;</span><br><span class="line">    name</span><br><span class="line">    age</span><br><span class="line">    sex</span><br><span class="line">    department</span><br><span class="line">    salary(city:&quot;canton&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<ul>
<li>示例2 js<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;buildSchema&#125; = <span class="built_in">require</span>(<span class="string">'graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> graphqlHTTP = <span class="built_in">require</span>(<span class="string">'express-graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> schema = buildSchema(<span class="string">`</span></span><br><span class="line"><span class="string">    type Account &#123;</span></span><br><span class="line"><span class="string">        name: String</span></span><br><span class="line"><span class="string">        age: Int</span></span><br><span class="line"><span class="string">        sex: String</span></span><br><span class="line"><span class="string">        department: String</span></span><br><span class="line"><span class="string">        salary(city: String): Int     </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    type Query &#123;</span></span><br><span class="line"><span class="string">        getClassMates(classNo: Int!): [String]</span></span><br><span class="line"><span class="string">        account(username: String): Account</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = &#123;</span><br><span class="line">    getClassMates: <span class="function">(<span class="params">&#123;classNo&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> obj = &#123;</span><br><span class="line">            <span class="number">31</span>: [<span class="string">'张三'</span>],</span><br><span class="line">            <span class="number">61</span>: [<span class="string">'李四'</span>]</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> obj[classNo]</span><br><span class="line">    &#125;,</span><br><span class="line">    account: <span class="function">(<span class="params">&#123;username&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> name = username;</span><br><span class="line">        <span class="keyword">const</span> sex = <span class="string">'man'</span>;</span><br><span class="line">        <span class="keyword">const</span> age = <span class="number">18</span>;</span><br><span class="line">        <span class="keyword">const</span> department = <span class="string">"development"</span>;</span><br><span class="line">        <span class="keyword">const</span> salary = <span class="function">(<span class="params">&#123;city&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (city === <span class="string">'canton'</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">10000</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3000</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            name,</span><br><span class="line">            sex,</span><br><span class="line">            age,</span><br><span class="line">            department,</span><br><span class="line">            salary</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/graphql'</span>, graphqlHTTP(&#123;</span><br><span class="line">    schema: schema,</span><br><span class="line">    rootValue: root,</span><br><span class="line">    graphiql: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<br>

<p><a name="sdBuX"></a></p>
<h2 id="GrqphQl-客户端访问"><a href="#GrqphQl-客户端访问" class="headerlink" title="GrqphQl 客户端访问"></a>GrqphQl 客户端访问</h2><p>示例3 获取示例2中的数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"getData()"</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> query = `</span></span><br><span class="line"><span class="javascript">    query Account($username: <span class="built_in">String</span>,<span class="attr">$city</span>: <span class="built_in">String</span>) &#123;</span></span><br><span class="line">      account(username: $username) &#123;</span><br><span class="line">        name</span><br><span class="line">        age</span><br><span class="line">        sex</span><br><span class="line">        salary(city: $city)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    `;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> variables = &#123;username: <span class="string">'xiaoming'</span>, city: <span class="string">"canton"</span>&#125;;</span></span><br><span class="line"><span class="actionscript">    fetch(<span class="string">'/graphql'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      method: <span class="string">"POST"</span>,</span></span><br><span class="line">      headers: &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"Accept"</span>: <span class="string">"application/json"</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="javascript">      body: <span class="built_in">JSON</span>.stringify(&#123;</span></span><br><span class="line">        query: query,</span><br><span class="line">        variables: variables</span><br><span class="line">      &#125;)</span><br><span class="line"><span class="javascript">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json)</span></span><br><span class="line"><span class="javascript">    .then(<span class="function"><span class="params">json</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(json)</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><a name="LdNqC"></a></p>
<h2 id="使用Mutations-修改数据"><a href="#使用Mutations-修改数据" class="headerlink" title="使用Mutations 修改数据"></a>使用Mutations 修改数据</h2><p>示例 创建数据查询体<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">mutation &#123;</span><br><span class="line">  createAccount(input: &#123;</span><br><span class="line">    name: <span class="string">"xiaoming"</span>,</span><br><span class="line">    age:<span class="number">20</span></span><br><span class="line">    sex: <span class="string">"female"</span></span><br><span class="line">    department: <span class="string">"test"</span></span><br><span class="line">  &#125;) &#123;</span><br><span class="line">    name</span><br><span class="line">    age</span><br><span class="line">    sex</span><br><span class="line">    department</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><br>示例 更新数据查询体<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">mutation &#123;</span><br><span class="line">  updateAccount(id: <span class="string">"xiaoming"</span>, <span class="attr">input</span>:&#123;</span><br><span class="line">    age:<span class="number">100</span></span><br><span class="line">  &#125;) &#123;</span><br><span class="line">    age</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><br>示例 查询数据 查询体<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">query &#123;</span><br><span class="line">  account&#123;</span><br><span class="line">    name</span><br><span class="line">    sex</span><br><span class="line">    age</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><br>示例 mutation.js文件<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;buildSchema&#125; = <span class="built_in">require</span>(<span class="string">'graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> graphqlHTTP = <span class="built_in">require</span>(<span class="string">'express-graphql'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> schema = buildSchema(<span class="string">`</span></span><br><span class="line"><span class="string">  input AccountInput &#123;</span></span><br><span class="line"><span class="string">    name: String</span></span><br><span class="line"><span class="string">    age: Int</span></span><br><span class="line"><span class="string">    sex: String</span></span><br><span class="line"><span class="string">    department: String</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  type Account &#123;</span></span><br><span class="line"><span class="string">    name: String</span></span><br><span class="line"><span class="string">    age: Int</span></span><br><span class="line"><span class="string">    sex: String</span></span><br><span class="line"><span class="string">    department: String</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  type Mutation &#123;</span></span><br><span class="line"><span class="string">    createAccount(input: AccountInput): Account</span></span><br><span class="line"><span class="string">    updateAccount(id: ID!, input: AccountInput): Account   </span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  type Query &#123;</span></span><br><span class="line"><span class="string">    account: [Account] </span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line"><span class="keyword">const</span> fakeDb = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = &#123;</span><br><span class="line">  account() &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> fakeDb) &#123;</span><br><span class="line">      arr.push(fakeDb[key])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;,</span><br><span class="line">  createAccount(&#123;input&#125;) &#123;</span><br><span class="line">    fakeDb[input.name] = input;</span><br><span class="line">    <span class="keyword">return</span> fakeDb[input.name]</span><br><span class="line">  &#125;,</span><br><span class="line">  updateAccount(&#123;id, input&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> updatedAccount = <span class="built_in">Object</span>.assign(&#123;&#125;, fakeDb[id], input)</span><br><span class="line">    <span class="built_in">console</span>.log(id, updatedAccount)</span><br><span class="line">    fakeDb[id] = updatedAccount;</span><br><span class="line">    <span class="built_in">console</span>.log(fakeDb)</span><br><span class="line">    <span class="keyword">return</span> updatedAccount</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/graphql'</span>, graphqlHTTP(&#123;</span><br><span class="line">  schema: schema,</span><br><span class="line">  rootValue: root,</span><br><span class="line">  graphiql: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">'.'</span>))</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<br>


]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>GraphQL</tag>
      </tags>
  </entry>
  <entry>
    <title>关于</title>
    <url>/about/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>归档</title>
    <url>/archives/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/lib/canvas-nest/canvas-nest-nomobile.min.js</url>
    <content><![CDATA[!function(){
	var userAgentInfo = navigator.userAgent;
    var Agents = ["iPad", "iPhone", "Android", 
          "SymbianOS", "Windows Phone",
           "iPod", "webOS", "BlackBerry", "IEMobile"];
    for (var v = 0; v < Agents.length; v++) {
      if (userAgentInfo.indexOf(Agents[v]) > 0) {
        return;
      }
    }
	function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j("script"),w=i.length,v=i[w-1];return{l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.x<0?-1:1,i.ya*=i.y>n||i.y<0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v<w.length;v++){x=w[v];if(i!==x&&null!==x.x&&null!==x.y){B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y<x.max&&(x===f&&y>=x.max/2&&(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n>p;p++){var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/lib/canvas-nest/canvas-nest.min.js</url>
    <content><![CDATA[!function(){function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j("script"),w=i.length,v=i[w-1];return{l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.x<0?-1:1,i.ya*=i.y>n||i.y<0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v<w.length;v++){x=w[v];if(i!==x&&null!==x.x&&null!==x.y){B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y<x.max&&(x===f&&y>=x.max/2&&(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n>p;p++){var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/lib/canvas-nest/README.html</url>
    <content><![CDATA[<h1 align="center"><a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener">canvas-nest.js</a> for <a href="https://github.com/theme-next" target="_blank" rel="noopener">NexT</a></h1><h1 align="center">Installation</h1><h2>If you want to use the CDN instead of clone this repo, please jump to the Step 3.</h2><h2 align="center">Step 1 &rarr; Go to NexT dir</h2><p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p><a id="more"></a>








<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ ls</span><br><span class="line">_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class="built_in">source</span></span><br></pre></td></tr></table></figure>

<h2 align="center">Step 2 &rarr; Get module</h2>

<p>Install module to <code>source/lib</code> directory:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest <span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<h2 align="center">Step 3 &rarr; Set it up</h2>

<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line"><span class="attr">  color:</span> <span class="string">'0,0,255'</span> <span class="comment"># RGB values, use ',' to separate</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">0.5</span> <span class="comment"># the opacity of line: 0~1</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="bullet">-1</span> <span class="comment"># z-index property of the background</span></span><br><span class="line"><span class="attr">  count:</span> <span class="number">99</span> <span class="comment"># the number of lines</span></span><br></pre></td></tr></table></figure>

<p><strong>And, if you wants to use the CDN, then need to set:</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="attr">  canvas_nest:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest.min.js</span></span><br><span class="line"><span class="attr">  canvas_nest_nomobile:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest-nomobile.min.js</span></span><br></pre></td></tr></table></figure>

<h1 align="center">Update</h1>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next/<span class="built_in">source</span>/lib/canvas-nest</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
