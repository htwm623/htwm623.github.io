<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue问题记录</title>
    <url>/htwm_open_sesame/2019/11/23/vue%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="vue使用-env文件保存全局变量"><a href="#vue使用-env文件保存全局变量" class="headerlink" title="vue使用.env文件保存全局变量"></a>vue使用.env文件保存全局变量</h2><ul>
<li><p>vue-cli 中可以使用.env文件保存环境变量,以便于快速切换环境</p>
</li>
<li><p>使用方式如下</p>
<ol>
<li><p>在主目录下创建.env文件,文件内容参照如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">VUE_APP_TITLE = <span class="string">"标题测试"</span></span><br><span class="line"><span class="comment">// 必须使用VUE_APP_ 开头</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在任何vue文件中均可使用如下方式进行读取,如:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(process.env.VUE_APP_TITLE)</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>使用不同的.env文件切换变量</p>
<ul>
<li><p>如创建.env.test文件</p>
</li>
<li><p>然后在启动脚本命令中配置 </p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "test": "vue-cli-service serve --mode test",</span><br><span class="line">    "serve": "vue-cli-service serve",</span><br><span class="line">    "build": "vue-cli-service build"</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p>即可使用 npm run test 运行服务,调用的即为.env.test 中的环境变量</p>
</li>
</ul>
</li>
</ul>
<a id="more"></a>

]]></content>
      <categories>
        <category>IT技术</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu18.04安装的坑</title>
    <url>/htwm_open_sesame/2019/11/05/Ubuntu18-04%E5%AE%89%E8%A3%85%E5%9D%91/</url>
    <content><![CDATA[<h2 id="SSH服务安装"><a href="#SSH服务安装" class="headerlink" title="SSH服务安装"></a>SSH服务安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure>



<h2 id="Linux链接SSR"><a href="#Linux链接SSR" class="headerlink" title="Linux链接SSR"></a>Linux链接SSR</h2><ul>
<li>参考github electron-ssr</li>
</ul>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>积少成多</title>
    <url>/htwm_open_sesame/2019/10/31/%E7%A7%AF%E5%B0%91%E6%88%90%E5%A4%9A/</url>
    <content><![CDATA[<h1 id="零零碎碎-个人习惯性配置等等"><a href="#零零碎碎-个人习惯性配置等等" class="headerlink" title="零零碎碎 个人习惯性配置等等"></a>零零碎碎 个人习惯性配置等等</h1><h2 id="将Python脚本编译成二进制文件"><a href="#将Python脚本编译成二进制文件" class="headerlink" title="将Python脚本编译成二进制文件"></a>将Python脚本编译成二进制文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bash</span></span><br><span class="line">$ python -m compile &lt;file&gt;</span><br><span class="line"><span class="comment"># 会在当前文件夹中生成__pycache__ 文件夹中生成对应的pyc文件</span></span><br><span class="line"><span class="comment"># 调用方式和原始文件一致,但只能使用同版本的python解释器执行</span></span><br></pre></td></tr></table></figure><h2 id="Pycharm-文件头配置"><a href="#Pycharm-文件头配置" class="headerlink" title="Pycharm 文件头配置"></a>Pycharm 文件头配置</h2><a id="more"></a>



<p>File  &rArr;  Settings &rArr; Editor  &rArr; File and Code Templates </p>
<p>其中python个人设置</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env python</span></span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line"># file: $&#123;NAME&#125;.py</span><br><span class="line"># time: $&#123;DATE&#125; $&#123;TIME&#125;</span><br><span class="line"># desc:</span><br></pre></td></tr></table></figure>



<h2 id="Vscode-配置背景图片"><a href="#Vscode-配置背景图片" class="headerlink" title="Vscode 配置背景图片"></a>Vscode 配置背景图片</h2><ol>
<li><p>安装 vscode extension: background</p>
</li>
<li><p>修改配置文件如下</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"background.useDefault": false,</span><br><span class="line">    "background.enabled": true,</span><br><span class="line">    "background.customImages": [</span><br><span class="line">        <span class="string">"file:///C:/Users/haibo/Desktop/%E5%A3%81%E7%BA%B8/timg.jpeg"</span></span><br><span class="line">    ],</span><br><span class="line">    "background.style": &#123;</span><br><span class="line">        "content": "''",</span><br><span class="line">        "pointer-events": "none",</span><br><span class="line">        "position": "absolute",</span><br><span class="line">        "z-index": "99999",</span><br><span class="line">        "width": "100%",</span><br><span class="line">        "height": "100%",</span><br><span class="line">        "background-position": "center",</span><br><span class="line">        "background-repeat": "no-repeat",</span><br><span class="line">        "background-size": "100%,100%",</span><br><span class="line">        "opacity": 0.3</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中 background.customImages 即为背景图片列表,最多可设置三张</p>
</li>
</ol>
]]></content>
      <categories>
        <category>IT技术</category>
      </categories>
      <tags>
        <tag>零零碎碎</tag>
        <tag>个人习惯配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Electron桌面软件开发</title>
    <url>/htwm_open_sesame/2019/10/31/Electron%E6%A1%8C%E9%9D%A2%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="Electron桌面软件开发"><a href="#Electron桌面软件开发" class="headerlink" title="Electron桌面软件开发"></a>Electron桌面软件开发</h1><h2 id="Electron-官方示例代码"><a href="#Electron-官方示例代码" class="headerlink" title="Electron 官方示例代码"></a>Electron 官方示例代码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/electron/electron-api-demos</span><br><span class="line">$ <span class="built_in">cd</span> electron-api-demos</span><br><span class="line">$ npm install <span class="comment"># 需要配置镜像 或者vpn</span></span><br><span class="line">$ npm start</span><br></pre></td></tr></table></figure>

<p>执行npm start 之后会展开一个官方示例的一个界面软件,大致展示electron部分功能</p>
<p>先写爬虫去了 未完待续 :cry:</p>
<a id="more"></a>



]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>electron</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>如何批量导入阿里icon</title>
    <url>/htwm_open_sesame/2019/10/28/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E9%98%BF%E9%87%8Cicon/</url>
    <content><![CDATA[<h1 id="如何批量导出阿里icon"><a href="#如何批量导出阿里icon" class="headerlink" title="如何批量导出阿里icon"></a>如何批量导出阿里icon</h1><p>原文章来源  <a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">https://www.jianshu.com/p/59dd28f0b9c9</a> </p>
<p>阿里icon 素材网站  <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a> </p>
<h2 id="下载图标"><a href="#下载图标" class="headerlink" title="下载图标"></a>下载图标</h2><ul>
<li>如何批量将素材导入购物车 比如在以下页面</li>
</ul>
<p><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_220857.png" alt="2019-10-28_220857"></p>
<a id="more"></a>

<p>在该页面下调出控制台 <kbd>F12</kbd>  在控制台执行如下代码 (亲测:2019年10月28日)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> icons = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.icon-gouwuche1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> auto_click = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123; <span class="keyword">if</span> (i &lt; icons.length) &#123; setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; icons.item(i).click(); auto_click(i + <span class="number">1</span>); &#125;, <span class="number">600</span>); &#125; &#125;;</span><br><span class="line"></span><br><span class="line">auto_click(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>



<p>则会自动添加代码至购物车 -&gt; 添加至项目 -&gt; 选择 fontclass 然后下载至本地</p>
<h2 id="调用图标"><a href="#调用图标" class="headerlink" title="调用图标"></a>调用图标</h2><ol>
<li>将下载的文件全部放入项目的assert 文件下</li>
<li>在main.js 中将 iconfont.css 文件引入(个人使用,略过 原文章中修改iconfont.css )</li>
<li>查看incofont.css 文件中 font-family的值,如:</li>
</ol>
<p><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_233757.png" alt="2019-10-28_233757"></p>
<p>红框即为 fontfamily</p>
<ol start="4">
<li><p>调用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-bad-fill"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>class空格前部分为 fontfamliy的值 后面一部分可在阿里icon项目页面进行复制</p>
</li>
</ol>
<p>   以上</p>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>图标</tag>
      </tags>
  </entry>
  <entry>
    <title>收藏的文章及网站</title>
    <url>/htwm_open_sesame/2019/10/28/%E6%94%B6%E8%97%8F%E7%9A%84%E6%96%87%E7%AB%A0%E5%8F%8A%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="收藏的文章及网站"><a href="#收藏的文章及网站" class="headerlink" title="收藏的文章及网站"></a>收藏的文章及网站</h1><h2 id="收藏的文章"><a href="#收藏的文章" class="headerlink" title="收藏的文章"></a>收藏的文章</h2><ol>
<li><p><a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">vue使用第三方icon</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/7bcf4ad609cf" target="_blank" rel="noopener">markdown中使用特殊的符号</a></p>
</li>
</ol>
<h2 id="收藏的网站"><a href="#收藏的网站" class="headerlink" title="收藏的网站"></a>收藏的网站</h2><ol>
<li><p><a href="https://www.hackerrank.com/dashboard" target="_blank" rel="noopener">hackerrank</a>  学习和提高编码能力的网站</p>
</li>
<li><p><a href="https://codesandbox.io/" target="_blank" rel="noopener">codesandbox</a>  在线代码编辑器,可以快速编辑vue react 等一些示例代码,也支持下载 ( <a href="https://codesandbox.io/s/vue-template-4hxce" target="_blank" rel="noopener">https://codesandbox.io/s/vue-template-4hxce</a> )</p>
</li>
</ol>
]]></content>
      <categories>
        <category>收藏文章</category>
      </categories>
      <tags>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title>nvm安装过程记录</title>
    <url>/htwm_open_sesame/2019/10/27/nvm%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="nvm安装及简单使用-windows"><a href="#nvm安装及简单使用-windows" class="headerlink" title="nvm安装及简单使用(windows)"></a>nvm安装及简单使用(windows)</h1><ol>
<li><p>为了避免不必要的麻烦及bug,最好先删除及卸载现有node版本</p>
</li>
<li><p>下载安装包  <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a>  选择可执行文件的安装包</p>
</li>
<li><p>nvm尽量不要配置代理(ps: 个人配置了淘宝代理之后 安装过程中只安装了node,npm安装失败,未仔细研究原因)</p>
</li>
<li><p>nvm 安装node及激活node</p>
<ol>
<li>nvm install <version>  安装指定版本的node及对应npm,如: nvm install 12.13.0</li>
<li>nvm on <version> 选择使用版本, 如: nvm on 12.13.0</li>
<li>nvm list   查看当前nvm下的node版本列表及当前的版本选择</li>
</ol>
</li>
<li><p>配置npm代理(因为npm安装使用次数较多,为了速度问题所以选择配置代理)</p>
<ol>
<li>选择华为的代理  华为镜像开源站( <a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/</a> )</li>
<li>在先放找到npm 按照说明进行配置即可,也可以执行如下代码</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</span><br><span class="line">npm cache clean -f</span><br></pre></td></tr></table></figure>





</li>
</ol>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml文件格式及python解析</title>
    <url>/htwm_open_sesame/2019/10/26/yaml%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8F%8Apython%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h1 id="yaml文件格式及python解析"><a href="#yaml文件格式及python解析" class="headerlink" title="yaml文件格式及python解析"></a>yaml文件格式及python解析</h1><h2 id="用途及基本规则"><a href="#用途及基本规则" class="headerlink" title="用途及基本规则"></a>用途及基本规则</h2><ul>
<li>常用于配置文件</li>
<li>大小写敏感</li>
<li>使用缩进表示嵌套</li>
<li>使用空格表示缩进,不允许使用  <kbd>Tab</kbd> 键作为缩进</li>
<li>缩进的空格数目没有实际意义,左侧对其即为同级</li>
</ul>
<a id="more"></a>



<h2 id="Python解析"><a href="#Python解析" class="headerlink" title="Python解析"></a>Python解析</h2><ul>
<li>涉及到的包 pip install PyYAML</li>
<li>示例代码</li>
</ul>
<p>yaml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.yaml</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">37</span></span><br><span class="line"><span class="attr">spouse:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Jane</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">25</span></span><br><span class="line"><span class="attr">children:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Jimmy</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">  - name1:</span> <span class="string">Jenny</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age1:</span> <span class="number">12</span></span><br></pre></td></tr></table></figure>

<p>python 解析示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'test.yaml'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)<span class="keyword">as</span> fr:</span><br><span class="line">        data = yaml.load(fr, Loader=yaml.Loader)</span><br><span class="line">    print(data)</span><br><span class="line"><span class="comment"># &#123;'age': 37, 'spouse': &#123;'name': 'Jane Smith', 'age': 25&#125;, 'children': [&#123;'name': 'Jimmy Smith', 'age': 15&#125;, &#123;'name1': 'Jenny Smith', 'age1': 12&#125;]&#125;</span></span><br></pre></td></tr></table></figure>





<h2 id="yaml语法"><a href="#yaml语法" class="headerlink" title="yaml语法"></a>yaml语法</h2><ul>
<li>参考 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML语言教程 阮一峰</a></li>
</ul>
]]></content>
      <categories>
        <category>IT技术</category>
      </categories>
      <tags>
        <tag>yaml</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>vue创建组件</title>
    <url>/htwm_open_sesame/2019/10/23/vue%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="vue创建组件及发布流程"><a href="#vue创建组件及发布流程" class="headerlink" title="vue创建组件及发布流程"></a>vue创建组件及发布流程</h1><h2 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h2><ol>
<li>首先创建组件代码</li>
</ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h3&gt;this is a web component  created in vue&lt;/h3&gt;  </span><br><span class="line">    &lt;div&gt; My name is &#123;&#123;name&#125;&#125; &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:&#123;</span><br><span class="line">    name: &#123;type: String,default:&quot;mark&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a>


<ol start="2">
<li>使用cli 进行组件封装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vue build --target wc .\src\components\my-component.vue</span><br><span class="line"></span><br><span class="line">- 踩坑 使用vue build 单个文件,文件名称中需要使用 <span class="string">"-"</span> 符号作为文件命名连接符</span><br></pre></td></tr></table></figure>





<p>1. </p>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>component</tag>
      </tags>
  </entry>
  <entry>
    <title>如何处理json文件结尾的逗号</title>
    <url>/htwm_open_sesame/2019/10/20/python/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86json%E6%96%87%E4%BB%B6%E7%BB%93%E5%B0%BE%E7%9A%84%E9%80%97%E5%8F%B7/</url>
    <content><![CDATA[<h1 id="python如何处理json文件结尾多余的逗号"><a href="#python如何处理json文件结尾多余的逗号" class="headerlink" title="python如何处理json文件结尾多余的逗号"></a>python如何处理json文件结尾多余的逗号</h1><p>问题描述, json文件结尾是不允许使用逗号的</p>
<p>正确格式如下:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但如果使用json作为配置文件时,人为输入可能如下</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在使用上述格式的文件时, json.loads文件会报错</p>
<a id="more"></a>

<p>参考来源 <a href="https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas" target="_blank" rel="noopener">https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas</a></p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>使用 jsoncomment 包进行解析</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(filename) <span class="keyword">as</span> data_file:    </span><br><span class="line">    parser = JsonComment(json)</span><br><span class="line">    data = parser.load(data_file)</span><br></pre></td></tr></table></figure>

<p>缺陷 会从字符串中删除逗号 例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line">string = <span class="string">'&#123;"key1": "&#123;my special value,&#125;"&#125;'</span></span><br><span class="line">parser = JsonComment()</span><br><span class="line">json_boj = parser.loads(string)</span><br><span class="line">print(json_boj)</span><br><span class="line"><span class="comment"># &#123;'key1': '&#123;my special value&#125;'&#125;</span></span><br><span class="line"><span class="comment"># 原本值中的字符串逗号也被删除了</span></span><br></pre></td></tr></table></figure>

<p>局限: 原本值中的字符串逗号也被删除了</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>先通过python 将字符串进行eval,同时 替换null, true false例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ast, json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clean_json</span><span class="params">(str)</span>:</span></span><br><span class="line">  str = str.replace(<span class="string">'null'</span>, <span class="string">'None'</span>).replace(<span class="string">'true'</span>, <span class="string">'True'</span>).replace(<span class="string">'false'</span>, <span class="string">'False'</span>)</span><br><span class="line">  <span class="keyword">return</span> json.dumps(ast.literal_eval(str))</span><br></pre></td></tr></table></figure>

<p>局限: </p>
<ol>
<li>会破坏原本字符串中包含 null, true, false </li>
<li>即算使用 ast.literal_eval 也需要考虑一些安全性的问题</li>
</ol>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul>
<li>json最好写对 :joy:, 如果作为需要手动添加内容的配置文件,最好还是改格式把</li>
</ul>
]]></content>
      <categories>
        <category>IT技术</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>归档</title>
    <url>/htwm_open_sesame/archives/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/htwm_open_sesame/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/htwm_open_sesame/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>关于</title>
    <url>/htwm_open_sesame/about/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/htwm_open_sesame/lib/canvas-nest/canvas-nest-nomobile.min.js</url>
    <content><![CDATA[!function(){
	var userAgentInfo = navigator.userAgent;
    var Agents = ["iPad", "iPhone", "Android", 
          "SymbianOS", "Windows Phone",
           "iPod", "webOS", "BlackBerry", "IEMobile"];
    for (var v = 0; v < Agents.length; v++) {
      if (userAgentInfo.indexOf(Agents[v]) > 0) {
        return;
      }
    }
	function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j("script"),w=i.length,v=i[w-1];return{l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.x<0?-1:1,i.ya*=i.y>n||i.y<0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v<w.length;v++){x=w[v];if(i!==x&&null!==x.x&&null!==x.y){B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y<x.max&&(x===f&&y>=x.max/2&&(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n>p;p++){var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/htwm_open_sesame/lib/canvas-nest/canvas-nest.min.js</url>
    <content><![CDATA[!function(){function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j("script"),w=i.length,v=i[w-1];return{l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.x<0?-1:1,i.ya*=i.y>n||i.y<0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v<w.length;v++){x=w[v];if(i!==x&&null!==x.x&&null!==x.y){B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y<x.max&&(x===f&&y>=x.max/2&&(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n>p;p++){var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/htwm_open_sesame/lib/canvas-nest/README.html</url>
    <content><![CDATA[<h1 align="center"><a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener">canvas-nest.js</a> for <a href="https://github.com/theme-next" target="_blank" rel="noopener">NexT</a></h1><h1 align="center">Installation</h1><h2>If you want to use the CDN instead of clone this repo, please jump to the Step 3.</h2><h2 align="center">Step 1 &rarr; Go to NexT dir</h2><p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p><a id="more"></a>








<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ ls</span><br><span class="line">_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class="built_in">source</span></span><br></pre></td></tr></table></figure>

<h2 align="center">Step 2 &rarr; Get module</h2>

<p>Install module to <code>source/lib</code> directory:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest <span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<h2 align="center">Step 3 &rarr; Set it up</h2>

<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line"><span class="attr">  color:</span> <span class="string">'0,0,255'</span> <span class="comment"># RGB values, use ',' to separate</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">0.5</span> <span class="comment"># the opacity of line: 0~1</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="bullet">-1</span> <span class="comment"># z-index property of the background</span></span><br><span class="line"><span class="attr">  count:</span> <span class="number">99</span> <span class="comment"># the number of lines</span></span><br></pre></td></tr></table></figure>

<p><strong>And, if you wants to use the CDN, then need to set:</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="attr">  canvas_nest:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest.min.js</span></span><br><span class="line"><span class="attr">  canvas_nest_nomobile:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest-nomobile.min.js</span></span><br></pre></td></tr></table></figure>

<h1 align="center">Update</h1>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next/<span class="built_in">source</span>/lib/canvas-nest</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
